* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
section {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  background: #133f21;
  /*背景颜色动画*/
  animation: animateColor 8s linear infinite;
}
@keyframes animateColor {
  /*使用hue-rotate()方法来实现色相旋转的滤镜效果*/
  0% {
    filter: hue-rotate(0deg);
  }
  0% {
    filter: hue-rotate(360deg);
  }
}
section .container {
  display: flex;
}
section .container .circle {
  position: relative;
  width: 150px;
  height: 150px;
  margin: 0 -7.5px;
}
section .container .circle span {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  /*360deg/20=180deg*/
  transform: rotate(calc(18deg * var(--i)));
}
section .container .circle span::before {
  content: '';
  position: absolute;
  right: 0;
  top: calc(50% - 8px);
  width: 15px;
  height: 15px;
  background: #3bec7a;
  border-radius: 50%;
  box-shadow: 0 0 10px #3bec7a, 0 0 20px #3bec7a, 0 0 40px #3bec7a,
    0 0 60px #3bec7a, 0 0 80px #3bec7a, 0 0 100px #3bec7a;
  transform: scale(0.1);
  /*动画 无线循环*/
  animation: animate 4s linear infinite;
  /*动画延时 实现转动效果*/
  animation-delay: calc(0.1s * var(--i));
}
@keyframes animate {
  0% {
    transform: scale(1);
  }
  50%,
  100% {
    transform: scale(0.1);
  }
}
/*让第二个圈反向*/
section .container .circle:nth-child(2) {
  transform: rotate(-180deg);
}
section .container .circle:nth-child(2) span::before {
  animation-delay: calc(-0.1s * var(--i));
}
